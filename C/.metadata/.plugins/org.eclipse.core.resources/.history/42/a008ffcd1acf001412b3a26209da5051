/*
 * init.c
 *
 *  Created on: 7 mar 2015
 *      Author: Kuba
 */

#include <avr/io.h>
#include "io.h"

void init_SPI(){
	DDR_SPI |= (1 << SCK)|(1 << SS)|(1 << MOSI); // wyjcie na tych pinach
	PORT_SPI &= ~_BV(SS);
	SPCR |= (1 << SPE); //spi enable
	SPCR |= (1 << SPIE); //spi interrupt enable
	SPCR |= (1 << MSTR); //atmega = master
	SPCR |= (1 << SPR0); //Prescaler 16
}

void init_IO() {
	DDR_LED |= (1 << LED1);
	DDR_LED |= (1 << LED2);
	DDR_LED |= (1 << LED3);
	DDR_LED |= (1 << LED4);
	DDR_LED |= (1 << LED5);

	DDR_LED_BATT |= (1 << LED_BATT_GR);
	DDR_LED_BATT |= (1 << LED_BATT_RED);

	DDR_STRIPE |= (1 << LED_STRIPE);
	DDR_TSAL |= (1 <<  TSAL_ENABLE);

	DDR_SWITCH &= ~(1 << SWITCH_DOWN);
	DDR_SWITCH &= ~(1 << SWITCH_OK);
	DDR_SWITCH &= ~(1 << SWITCH_UP);

	DDR_TSOP &= ~(_BV(TSOP));
}

void init_CTC(){
	DDRB |= (1<<PB1); //wyjscie na tsal

	TCCR1B |= (1<<WGM12)|(1<<CS10); //CTC max OCR1A, prescaler1
	TCCR1A |= (1<<COM1A0); //toggle PB1 on compare match
	OCR1A = 28;
	TCNT1 = 0;

    //TIMSK |= (1<<OCIE2); //Interrupt enable on comapre match
    //TIFR |= (1<<OCF2);
}

void init_ADC() {
	ADMUX = (1<<MUX2)|(1<<MUX1); //ADC6

	ADCSRA |= (1<<ADPS1) | (1<<ADPS0); //prescaler 8  100000/8=125khz adc

	ADMUX |= (1<<ADLAR); //left adjutment
	ADMUX |= (1<<REFS0); //avcc with external capacitor at AREF pin
}

uint8_t check_ADC(){
	ADCSRA |= (1<<ADEN); //ADEN: ADC Enable (uruchomienie przetwornika)
	ADCSRA |= (1<<ADSC);

	while(ADCSRA & (1<<ADSC));

	ADCSRA &= ~(1<<ADEN); //ADEN: ADC Enable (uruchomienie przetwornika)
	return ADCH;
}

/*
void init_TIM0_BATT(){
	TCCR0 |= (1<<CS00); //prescaler 1024 - 1kHz, 1 OVF=0,25s
	TCNT0 = 0;
	TIMSK |= (1<<TOIE0); //overflow interrupt enable
}

volatile uint8_t batt_level=0;
void TIMER0_OVF_vect(){
	batt_level++;
	//if(batt_level % 2 == 1) LED1_ON;
} */
