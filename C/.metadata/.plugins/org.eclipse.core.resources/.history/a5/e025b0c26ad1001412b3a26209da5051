/*
 * usart.c
 *
 *  Created on: 18 mar 2015
 *      Author: Kuba
 */

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include "io.h"
#include "communication.h"

void ping(uint8_t numberOfSensors){
	int counter=1;
	for(counter=1;counter<=numberOfSensors;counter++){
		_delay_ms(500);
		USART_Transmit((char)numberOfSensors);
	}
	USART_Transmit(0b11111111); //end of ping
}

void startCounter(uint8_t number){
	switch (number){
	case 1:
		LED1Y_ON;
		raceFlag=0;
		break;
	case 2:
		LED2S_ON;
		raceFlag=0;
		break;
	case 3:
		LED3S_ON;
		raceFlag=0;
		break;
	case 4:
		LED4S_ON;
		raceFlag=0;
		break;
	case 5:
		LED5S_ON;
		raceFlag=0;
		break;
	case 0:
		LED1Y_OFF;
		LED2Y_OFF;
		LED3Y_OFF;
		LED4Y_OFF;
		LED5Y_OFF;
		LED_GO_ON;
		LED_FALSTART_OFF;
		raceFlag=1;
		break;
	case 15:
		LED1Y_OFF;
		LED2Y_OFF;
		LED3Y_OFF;
		LED4Y_OFF;
		LED5Y_OFF;
		LED_GO_OFF;
		LED_FALSTART_ON;
		raceFlag=0;
		break;
	}
}

ISR(SPI_STC_vect)
{
    char dataReceived = SPDR; //Pobieramy wartoœæ wys³an¹ przez Master
    spiDataReceived = dataReceived;
    //do sth
}

void spi_send(char data)
{
    SPDR = data;  //Wysy³amy zawartoœæ zmiennej bajt
    while( ! bit_is_set( SPSR, SPIF ) );        //Oczekujemy na zakoñczenie transmisji ( do ustawienia SPIF ) przez sprzêt
}

void USART_Transmit(unsigned char data)
{
    //wait for empty transmit buffer
    while ( !(UCSRA & (1<<UDRE)) );

    //put data into buffer, sends data
    UDR = data;
}
